#include <Arduino.h>

#ifndef _SHA26_
#define _SHA26_

#define DIGEST_LENGTH 32
#define MESSAGE_MAX_LENGTH 56

/**
 * Усеченная реализация хеширования по алгоритму SHA-2
 * Позволяет хешировать данные длиной до 56 байт.
 */
class Digest
{
public:
	/**
	 * Добавляет блок данных для вычисления хеша
	 Вычисляет 256-битный хеш по алгоритму SHA-2
	 *
	 * @param data указатель на хешируемые данные
	 * @param len длина данных (не более 56 байт)
	 */
	void update(const uint8_t *data, uint8_t len);
	
	/**
	 * Вычисляет 256-битный хеш по алгоритму SHA-2
	 *
	 * @return указатель на вычисленный хеш (32 байта)
	 */
	uint32_t *digest();
	
	/**
	 * Сбрасывает состояние функции для вычисления нового хеша.
	 *
	 */
	void reset();
	
private:
	/**
	 * Выполняет хеширование одного блока данных
	 * 
	 * @param data указатель на 64-байтный буфер исходных данных (16 слов по 4 байта)
	 * @param hash указатель на 32-байтный буфер хеша (8 слов по 4 байта)
	 */
	void block(uint32_t *data, uint32_t *hash);
	
	uint32_t hash[8];
	uint32_t data[16] = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};
	int txtlen = 0; // длина сообщения в буфере
	int msgsize = 0; // длина сообщения в битах
};
#endif